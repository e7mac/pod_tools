#!/usr/bin/env ruby

if RUBY_VERSION > '1.8.7' && Encoding.default_external != Encoding::UTF_8
  puts "\e[33mWARNING: CocoaPods requires your terminal to be using UTF-8 encoding."
  if ENV["TRAVIS"]
    puts <<-DOC
Consider adding the following settings to .travis.yml

before_script:
  - export LANG=en_US.UTF-8\e[0m\n
    DOC
  else
    puts <<-DOC
See https://github.com/CocoaPods/guides.cocoapods.org/issues/26 for
possible solutions.\e[0m\n
    DOC
  end
end

STDOUT.sync = true if ENV['CP_STDOUT_SYNC'] == 'TRUE'

require 'cocoapods'
require 'fileutils'

local_pods = []
while (!ARGV.empty?) do 
  option = ARGV.shift

  if option == '--keep' 
    local_pods = ARGV.map { |arg| arg if arg[0] != '-' }
  elsif option == '--h' 
    puts <<-DOC

Options:

  --h 
  Will show this help.

  --keep podname1 podname2 ...
  will keep those pods local and leaves the other pods in the Podfile untouched. The local pods
  are assumed to be in the below path relative to where this Podfile is located:
    ../podname1/podname1.podspec
    DOC
    exit
  end
end

FileUtils.cp('Podfile', 'Podfile.original')
new_lines = ""
puts "Executing the below modified Podfile: \n"
puts "===================================== \n"
IO.readlines('Podfile.original').each do |line|
  match_data = /pod '(?<podname>\w+)'/.match(line)
  if match_data
    podname = match_data['podname']
    if local_pods.index(podname) 
      # Keep this as a local pod
      new_line = "pod '#{podname}', :path=> \"../#{podname}/#{podname}.podspec\" \n"
      clone_command = "git clone #{ENV['GIT_REPO_BASE_URL']}/#{podname}.git ../#{podname}"
      puts "Cloning pod - #{clone_command}"
      system clone_command
    else 
      new_line = line
    end
  else
    new_line = line
  end
  new_lines = new_lines + new_line
  puts new_line
end
IO.write('Podfile', new_lines)

args = ['install', '--no-repo-update']

Pod::Command.run(args)

FileUtils.cp('Podfile.original', 'Podfile')
FileUtils.rm('Podfile.original')

